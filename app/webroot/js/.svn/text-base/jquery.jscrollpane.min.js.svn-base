(function (a, f, d) { var e = "split", b = false, c = true; a.fn.jScrollPane = function (f) { function g(g, lc) { var Ob = "jspHijack", Nb = "click.jsp-hijack", Mb = "keydown.jsp keypress.jsp", rb = "tabindex", qb = "focus.jsp", Lb = ":input,a", eb = "jspDisabled", db = "removeClass", cb = "addClass", pb = "left", Kb = "jsp-arrow-change", R = null, Q = "mouseup.jsp", Jb = "mouseup.jsp mouseleave.jsp", Ib = "mousemove.jsp", M = "jspActive", Hb = "dragstart.jsp selectstart.jsp", L = "html", bb = "jspHover", ab = "mouseover.jsp", Z = "click.jsp", v = "mousedown.jsp", Gb = ">.jspDrag", Fb = ">.jspTrack", Eb = '<div class="jspDrag" />', Rb = '<div class="jspTrack" />', tb = "jspScrollable", sb = "width", t = "px", Qb = "paddingLeft", Pb = "paddingRight", f, l = this, i, k, j, h, p, o, lb, X, u, s, r, y, n, q, F, m, fb, x, mb, J, A, V, T, Y, w, H, z, U, S, W, Cb, G, zb, jb = c, ib = c, gb = b, hb = b, kb = g.clone(b, b).empty(), vb = a.fn.mwheelIntent ? "mwheelIntent.jsp" : "mousewheel.jsp"; Cb = g.css("paddingTop") + " " + g.css(Pb) + " " + g.css("paddingBottom") + " " + g.css(Qb); G = (parseInt(g.css(Qb), 10) || 0) + (parseInt(g.css(Pb), 10) || 0); function ub(r) { var z = "overflow", e, x, y, c, q, l, v = b, w = b; f = r; if (i === d) { q = g.scrollTop(); l = g.scrollLeft(); g.css({ overflow: "hidden", padding: 0 }); k = g.innerWidth() + G; j = g.innerHeight(); g.width(k); i = a('<div class="jspPane" />').css("padding", Cb).append(g.children()); h = a('<div class="jspContainer" />').css({ width: k + t, height: j + t }).append(i).appendTo(g) } else { g.css(sb, ""); v = f.stickToBottom && ec(); w = f.stickToRight && gc(); c = g.innerWidth() + G != k || g.outerHeight() != j; if (c) { k = g.innerWidth() + G; j = g.innerHeight(); h.css({ width: k + t, height: j + t }) } if (!c && zb == p && i.outerHeight() == o) { g.width(k); return } zb = p; i.css(sb, ""); g.width(k); h.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end() } i.css(z, "auto"); if (r.contentWidth) p = r.contentWidth; else p = i[0].scrollWidth; o = i[0].scrollHeight; i.css(z, ""); lb = p / k; X = o / j; u = X > 1; s = lb > 1; if (!(s || u)) { g.removeClass(tb); i.css({ top: 0, width: h.width() - G }); bc(); Xb(); Yb(); Bb(); yb() } else { g.addClass(tb); e = f.maintainPosition && (n || m); if (e) { x = B(); y = C() } Ub(); Tb(); cc(); if (e) { N(w ? p - k : x, b); E(v ? o - j : y, b) } ac(); fc(); jc(); f.enableKeyboardNavigation && dc(); f.clickOnTrack && Zb(); ic(); f.hijackInternalLinks && Ab() } if (f.autoReinitialise && !W) W = setInterval(function () { ub(f) }, f.autoReinitialiseDelay); else !f.autoReinitialise && W && clearInterval(W); q && g.scrollTop(0) && E(q, b); l && g.scrollLeft(0) && N(l, b); g.trigger("jsp-initialised", [s || u]) } function Ub() { if (u) { h.append(a('<div class="jspVerticalBar" />').append(a('<div class="jspCap jspCapTop" />'), a(Rb).append(a(Eb).append(a('<div class="jspDragTop" />'), a('<div class="jspDragBottom" />'))), a('<div class="jspCap jspCapBottom" />'))); fb = h.find(">.jspVerticalBar"); x = fb.find(Fb); r = x.find(Gb); if (f.showArrows) { V = a('<a class="jspArrow jspArrowUp" />').bind(v, D(0, -1)).bind(Z, O); T = a('<a class="jspArrow jspArrowDown" />').bind(v, D(0, 1)).bind(Z, O); if (f.arrowScrollOnHover) { V.bind(ab, D(0, -1, V)); T.bind(ab, D(0, 1, T)) } Db(x, f.verticalArrowPositions, V, T) } J = j; h.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function () { J -= a(this).outerHeight() }); r.hover(function () { r.addClass(bb) }, function () { r.removeClass(bb) }).bind(v, function (d) { a(L).bind(Hb, O); r.addClass(M); var c = d.pageY - r.position().top; a(L).bind(Ib, function (a) { I(a.pageY - c, b) }).bind(Jb, Sb); return b }); xb() } } function xb() { x.height(J + t); n = 0; mb = f.verticalGutter + x.outerWidth(); i.width(k - mb - G); try { fb.position().left === 0 && i.css("margin-left", mb + t) } catch (a) { } } function Tb() { if (s) { h.append(a('<div class="jspHorizontalBar" />').append(a('<div class="jspCap jspCapLeft" />'), a(Rb).append(a(Eb).append(a('<div class="jspDragLeft" />'), a('<div class="jspDragRight" />'))), a('<div class="jspCap jspCapRight" />'))); Y = h.find(">.jspHorizontalBar"); w = Y.find(Fb); q = w.find(Gb); if (f.showArrows) { U = a('<a class="jspArrow jspArrowLeft" />').bind(v, D(-1, 0)).bind(Z, O); S = a('<a class="jspArrow jspArrowRight" />').bind(v, D(1, 0)).bind(Z, O); if (f.arrowScrollOnHover) { U.bind(ab, D(-1, 0, U)); S.bind(ab, D(1, 0, S)) } Db(w, f.horizontalArrowPositions, U, S) } q.hover(function () { q.addClass(bb) }, function () { q.removeClass(bb) }).bind(v, function (d) { a(L).bind(Hb, O); q.addClass(M); var c = d.pageX - q.position().left; a(L).bind(Ib, function (a) { K(a.pageX - c, b) }).bind(Jb, Sb); return b }); H = h.innerWidth(); wb() } } function wb() { h.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function () { H -= a(this).outerWidth() }); w.width(H + t); m = 0 } function cc() { if (s && u) { var b = w.outerHeight(), c = x.outerWidth(); J -= b; a(Y).find(">.jspCap:visible,>.jspArrow").each(function () { H += a(this).outerWidth() }); H -= c; j -= c; k -= b; w.parent().append(a('<div class="jspCorner" />').css(sb, b + t)); xb(); wb() } s && i.width(h.outerWidth() - G + t); o = i.outerHeight(); X = o / j; if (s) { z = Math.ceil(1 / lb * H); if (z > f.horizontalDragMaxWidth) z = f.horizontalDragMaxWidth; else if (z < f.horizontalDragMinWidth) z = f.horizontalDragMinWidth; q.width(z + t); F = H - z; nb(m) } if (u) { A = Math.ceil(1 / X * J); if (A > f.verticalDragMaxHeight) A = f.verticalDragMaxHeight; else if (A < f.verticalDragMinHeight) A = f.verticalDragMinHeight; r.height(A + t); y = J - A; ob(n) } } function Db(h, a, b, c) { var d = "before", f = "after", g; if (a == "os") a = /Mac/.test(navigator.platform) ? "after" : e; if (a == d) f = a; else if (a == f) { d = a; g = b; b = c; c = g } h[d](b)[f](c) } function D(a, c, d) { return function () { hc(a, c, this, d); this.blur(); return b } } function hc(k, m, g, d) { g = a(g).addClass(M); var h, e, j = c, i = function () { k !== 0 && l.scrollByX(k * f.arrowButtonSpeed); m !== 0 && l.scrollByY(m * f.arrowButtonSpeed); e = setTimeout(i, j ? f.initialDelay : f.arrowRepeatFreq); j = b }; i(); h = d ? "mouseout.jsp" : Q; d = d || a(L); d.bind(h, function () { g.removeClass(M); e && clearTimeout(e); e = R; d.unbind(h) }) } function Zb() { Bb(); u && x.bind(v, function (e) { if (e.originalTarget === d || e.originalTarget == e.currentTarget) { var i = a(this), q = i.offset(), k = e.pageY - q.top - n, g, p = c, m = function () { var q = i.offset(), a = e.pageY - q.top - A / 2, c = j * f.scrollPagePercent, d = y * c / (o - j); if (k < 0) if (n - d > a) l.scrollByY(-c); else I(a); else if (k > 0) if (n + d < a) l.scrollByY(c); else I(a); else { h(); return } g = setTimeout(m, p ? f.initialDelay : f.trackClickRepeatFreq); p = b }, h = function () { g && clearTimeout(g); g = R; a(document).unbind(Q, h) }; m(); a(document).bind(Q, h); return b } }); s && w.bind(v, function (e) { if (e.originalTarget === d || e.originalTarget == e.currentTarget) { var i = a(this), q = i.offset(), j = e.pageX - q.left - m, g, o = c, n = function () { var q = i.offset(), a = e.pageX - q.left - z / 2, c = k * f.scrollPagePercent, d = F * c / (p - k); if (j < 0) if (m - d > a) l.scrollByX(-c); else K(a); else if (j > 0) if (m + d < a) l.scrollByX(c); else K(a); else { h(); return } g = setTimeout(n, o ? f.initialDelay : f.trackClickRepeatFreq); o = b }, h = function () { g && clearTimeout(g); g = R; a(document).unbind(Q, h) }; n(); a(document).bind(Q, h); return b } }) } function Bb() { w && w.unbind(v); x && x.unbind(v) } function Sb() { a(L).unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp"); r && r.removeClass(M); q && q.removeClass(M) } function I(a, b) { if (!u) return; if (a < 0) a = 0; else if (a > y) a = y; if (b === d) b = f.animateScroll; if (b) l.animate(r, "top", a, ob); else { r.css("top", a); ob(a) } } function ob(c) { if (c === d) c = r.position().top; h.scrollTop(0); n = c; var b = n === 0, a = n == y, f = c / y, e = -f * (o - j); if (jb != b || gb != a) { jb = b; gb = a; g.trigger(Kb, [jb, gb, ib, hb]) } Wb(b, a); i.css("top", e); g.trigger("jsp-scroll-y", [-e, b, a]).trigger("scroll") } function K(a, b) { if (!s) return; if (a < 0) a = 0; else if (a > F) a = F; if (b === d) b = f.animateScroll; if (b) l.animate(q, pb, a, nb); else { q.css(pb, a); nb(a) } } function nb(c) { if (c === d) c = q.position().left; h.scrollTop(0); m = c; var b = m === 0, a = m == F, f = c / F, e = -f * (p - k); if (ib != b || hb != a) { ib = b; hb = a; g.trigger(Kb, [jb, gb, ib, hb]) } Vb(b, a); i.css(pb, e); g.trigger("jsp-scroll-x", [-e, b, a]).trigger("scroll") } function Wb(b, a) { if (f.showArrows) { V[b ? cb : db](eb); T[a ? cb : db](eb) } } function Vb(b, a) { if (f.showArrows) { U[b ? cb : db](eb); S[a ? cb : db](eb) } } function E(c, b) { var a = c / (o - j); I(a * y, b) } function N(c, b) { var a = c / (p - k); K(a * F, b) } function P(s, q, r) { var b, m, n, d = 0, c = 0, l, i, p, o, g, e; try { b = a(s) } catch (t) { return } m = b.outerHeight(); n = b.outerWidth(); h.scrollTop(0); h.scrollLeft(0); while (!b.is(".jspPane")) { d += b.position().top; c += b.position().left; b = b.offsetParent(); if (/^body|html$/i.test(b[0].nodeName)) return } l = C(); p = l + j; if (d < l || q) g = d - f.verticalGutter; else if (d + m > p) g = d - j + m + f.verticalGutter; g && E(g, r); i = B(); o = i + k; if (c < i || q) e = c - f.horizontalGutter; else if (c + n > o) e = c - k + n + f.horizontalGutter; e && N(e, r) } function B() { return -i.position().left } function C() { return -i.position().top } function ec() { var a = o - j; return a > 20 && a - C() < 10 } function gc() { var a = p - k; return a > 20 && a - B() < 10 } function fc() { h.unbind(vb).bind(vb, function (h, g, a, c) { var d = m, e = n; l.scrollBy(a * f.mouseWheelSpeed, -c * f.mouseWheelSpeed, b); return d == m && e == n }) } function bc() { h.unbind(vb) } function O() { return b } function ac() { i.find(Lb).unbind(qb).bind(qb, function (a) { P(a.target, b) }) } function Xb() { i.find(Lb).unbind(qb) } function dc() { var p = "hideFocus", d, e, k = []; s && k.push(Y[0]); u && k.push(fb[0]); i.focus(function () { g.focus() }); g.attr(rb, 0).unbind(Mb).bind("keydown.jsp", function (b) { if (b.target !== this && !(k.length && a(b.target).closest(k).length)) return; var c = m, f = n; switch (b.keyCode) { case 40: case 38: case 34: case 32: case 33: case 39: case 37: d = b.keyCode; q(); break; case 35: E(o - j); d = R; break; case 36: E(0); d = R } e = b.keyCode == d && c != m || f != n; return !e }).bind("keypress.jsp", function (a) { a.keyCode == d && q(); return !e }); if (f.hideFocus) { g.css("outline", "none"); p in h[0] && g.attr(p, c) } else { g.css("outline", ""); p in h[0] && g.attr(p, b) } function q() { var a = m, c = n; switch (d) { case 40: l.scrollByY(f.keyboardSpeed, b); break; case 38: l.scrollByY(-f.keyboardSpeed, b); break; case 34: case 32: l.scrollByY(j * f.scrollPagePercent, b); break; case 33: l.scrollByY(-j * f.scrollPagePercent, b); break; case 39: l.scrollByX(f.keyboardSpeed, b); break; case 37: l.scrollByX(-f.keyboardSpeed, b) } e = a != m || c != n; return e } } function Yb() { g.attr(rb, "-1").removeAttr(rb).unbind(Mb) } function ic() { if (location.hash && location.hash.length > 1) { var e, d, b = escape(location.hash); try { e = a(b) } catch (f) { return } if (e.length && i.find(b)) if (h.scrollTop() === 0) d = setInterval(function () { if (h.scrollTop() > 0) { P(b, c); a(document).scrollTop(h.position().top); clearInterval(d) } }, 50); else { P(b, c); a(document).scrollTop(h.position().top) } } } function yb() { a("a.jspHijack").unbind(Nb).removeClass(Ob) } function Ab() { yb(); a("a[href^=#]").addClass(Ob).bind(Nb, function () { var d = this.href.split("#"), a; if (d.length > 1) { a = d[1]; if (a.length > 0 && i.find("#" + a).length > 0) { P("#" + a, c); return b } } }) } function jc() { var g, i, d, e, a, f = b; h.unbind("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").bind("touchstart.jsp", function (j) { var h = j.originalEvent.touches[0]; g = B(); i = C(); d = h.pageX; e = h.pageY; a = b; f = c }).bind("touchmove.jsp", function (j) { if (!f) return; var b = j.originalEvent.touches[0], c = m, h = n; l.scrollTo(g + d - b.pageX, i + e - b.pageY); a = a || Math.abs(d - b.pageX) > 5 || Math.abs(e - b.pageY) > 5; return c == m && h == n }).bind("touchend.jsp", function () { f = b }).bind("click.jsp-touchclick", function () { if (a) { a = b; return b } }) } function kc() { var b = C(), a = B(); g.removeClass(tb).unbind(".jsp"); g.replaceWith(kb.append(i.children())); kb.scrollTop(b); kb.scrollLeft(a) } a.extend(l, { reinitialise: function (b) { b = a.extend({}, f, b); ub(b) }, scrollToElement: function (c, a, b) { P(c, a, b) }, scrollTo: function (b, c, a) { N(b, a); E(c, a) }, scrollToX: function (b, a) { N(b, a) }, scrollToY: function (b, a) { E(b, a) }, scrollToPercentX: function (a, b) { N(a * (p - k), b) }, scrollToPercentY: function (a, b) { E(a * (o - j), b) }, scrollBy: function (b, c, a) { l.scrollByX(b, a); l.scrollByY(c, a) }, scrollByX: function (a, c) { var d = B() + Math[a < 0 ? "floor" : "ceil"](a), b = d / (p - k); K(b * F, c) }, scrollByY: function (a, c) { var d = C() + Math[a < 0 ? "floor" : "ceil"](a), b = d / (o - j); I(b * y, c) }, positionDragX: function (b, a) { K(b, a) }, positionDragY: function (b, a) { I(b, a) }, animate: function (g, e, d, c) { var a = {}; a[e] = d; g.animate(a, { duration: f.animateDuration, easing: f.animateEase, queue: b, step: c }) }, getContentPositionX: function () { return B() }, getContentPositionY: function () { return C() }, getContentWidth: function () { return p }, getContentHeight: function () { return o }, getPercentScrolledX: function () { return B() / (p - k) }, getPercentScrolledY: function () { return C() / (o - j) }, getIsScrollableH: function () { return s }, getIsScrollableV: function () { return u }, getContentPane: function () { return i }, scrollToBottom: function (a) { I(y, a) }, hijackInternalLinks: function () { Ab() }, destroy: function () { kc() } }); ub(lc) } f = a.extend({}, a.fn.jScrollPane.defaults, f); a.each(["mouseWheelSpeed", "arrowButtonSpeed", "trackClickSpeed", "keyboardSpeed"], function () { f[this] = f[this] || f.speed }); return this.each(function () { var c = a(this), b = c.data("jsp"); if (b) b.reinitialise(f); else { b = new g(c, f); c.data("jsp", b) } }) }; a.fn.jScrollPane.defaults = { showArrows: b, maintainPosition: c, stickToBottom: b, stickToRight: b, clickOnTrack: c, autoReinitialise: b, autoReinitialiseDelay: 500, verticalDragMinHeight: 0, verticalDragMaxHeight: 99999, horizontalDragMinWidth: 0, horizontalDragMaxWidth: 99999, contentWidth: d, animateScroll: b, animateDuration: 300, animateEase: "linear", hijackInternalLinks: b, verticalGutter: 4, horizontalGutter: 4, mouseWheelSpeed: 0, arrowButtonSpeed: 0, arrowRepeatFreq: 50, arrowScrollOnHover: b, trackClickSpeed: 0, trackClickRepeatFreq: 70, verticalArrowPositions: e, horizontalArrowPositions: e, enableKeyboardNavigation: c, hideFocus: b, keyboardSpeed: 0, initialDelay: 300, speed: 30, scrollPagePercent: .8} })(jQuery, this);